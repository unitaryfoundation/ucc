name: Publish Python Package

on:
  release:
    types: [published]
  workflow_dispatch:  # This allows manual triggering of the workflow

permissions:
  contents: read

jobs:
  debug:
      runs-on: ubuntu-latest
      if: (github.event.release.target_commitish == 'main' && github.event_name == 'release') || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/jordandsullivan-patch-1')      steps:
        - name: Debug event data
          run: |
            echo "Event name: ${{ github.event_name }}"
            echo "Release target_commitish: ${{ github.event.release.target_commitish }}"
            echo "Ref: ${{ github.ref }}"


  release-build:
    runs-on: ubuntu-latest

    steps:
      - name: Configure Git to use 'main' as default branch
        run: git config --global init.defaultBranch main
  
      - uses: actions/checkout@v4

      - uses: abatilo/actions-poetry@v2

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build release distributions
        run: poetry build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  testpypi-publish:
    runs-on: ubuntu-latest
    needs: release-build
    permissions:
      id-token: write
    environment:
      name: testpypi
      url: https://test.pypi.org/project/ucc/${{ github.event.release.tag_name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/

      - name: Clean up distributions
        run: rm -rf dist/
  
  pypi-publish:
    runs-on: ubuntu-latest
    needs: testpypi-publish # If statement guarantees we are on main and either in a release or manual dispatch event. 
    if: (github.event.release.target_commitish == 'main' && github.event_name == 'release') || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main')
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/ucc/${{ github.event.release.tag_name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

      - name: Clean up distributions
        run: rm -rf dist/
