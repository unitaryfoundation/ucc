name: Run Benchmarks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-benchmarks:
    runs-on: ucc-benchmarks-8-core

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure full history for branch operations

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t ucc-benchmark .

       # Run the benchmarks in the Docker container
       - name: Run benchmarks
       run: |
         docker run --rm \
           -v ${{ github.workspace }}:/ucc \
           -e GITHUB_REF_NAME="${{ github.ref_name }}" \
           ucc-benchmark bash -c "
             git fetch --all && \
             git checkout ${GITHUB_REF_NAME} && \
             source /venv/bin/activate && \
             ./benchmarks/scripts/small_test.sh 8 && \
             python ./benchmarks/scripts/generate_latest_benchmark_plot.py && \
             touch benchmarks/compiler_benchmarks_over_time.png
           "

      # Verify generated file
      - name: Verify generated files
        run: ls -l benchmarks/compiler_benchmarks_over_time.png

      # Add benchmark results to Git
      - name: Git add all
        run: |
          git add .
          git status

      # Commit and push benchmark results
      - name: Commit and push results
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Actions
          author_email: actions@github.com
          message: "Update benchmark results"
          add: "."
          push: true
